name=demo-service
system=demo-system

### http server
# When the enabled value = false, agent will not start the http server
# You can use -Deaseagent.server.enabled=[true | false] to override.
easeagent.server.enabled=true
# http server port. You can use -Deaseagent.server.port=[port] to override.
easeagent.server.port=9900

# Enable health/readiness
easeagent.health.readiness.enabled=true

# penetration field page
# Penetrate fields from the root process all the way to the end
# X-canary for mesh-app-backend
easeagent.progress.penetration.fields=root_source,X-Mesh-Canary
# support ease mesh
# get headers
# X-EG-Circuit-Breaker
# X-EG-Retryer
# X-EG-Rate-Limiter
# X-EG-Time-Limiter
easeagent.progress.response.hold.tag.fields=X-EG-Circuit-Breaker,X-EG-Retryer,X-EG-Rate-Limiter,X-EG-Time-Limiter

# async
plugin.observability.async.tracing.enabled=true

globalCanaryHeaders.serviceHeaders.default.0=X-Mesh-Canary

###
### output server
###
# if set empty value, agent will not init kafka, metrics and trace data will output to console
# observability.outputServer.bootstrapServer=127.0.0.1:9092
# observability.outputServer.timeout=10000
# observability.outputServer.enabled=true
###
### metrics
###
observability.metrics.enabled=true
# metrics access
observability.metrics.access.enabled=true
observability.metrics.access.interval=30
observability.metrics.access.topic=application-log
observability.metrics.access.appendType=console
# metrics request
observability.metrics.request.enabled=true
observability.metrics.request.interval=30
observability.metrics.request.topic=application-meter
observability.metrics.request.appendType=console

# metrics jvmGc
observability.metrics.jvmGc.enabled=false
observability.metrics.jvmGc.interval=30
observability.metrics.jvmGc.topic=platform-meter
observability.metrics.jvmGc.appendType=console
# metrics jvmMemory
observability.metrics.jvmMemory.enabled=false
observability.metrics.jvmMemory.interval=30
observability.metrics.jvmMemory.topic=platform-meter
observability.metrics.jvmMemory.appendType=console
# metrics md5Dictionary
observability.metrics.md5Dictionary.enabled=true
# 5 minutes
observability.metrics.md5Dictionary.interval=300
observability.metrics.md5Dictionary.topic=application-meter
observability.metrics.md5Dictionary.appendType=console

###
### tracings
###
observability.tracings.enabled=true
observability.tracings.sampledByQPS=100
observability.tracings.output.enabled=true

# [zipkin]: send data to zipkin server
# [system]: send data to kafka
# observability.tracings.output.target=zipkin
observability.tracings.output.target=system
# send data to zipkin server
observability.tracings.output.target.zipkinUrl=http://localhost:9411/api/v2/spans

observability.tracings.output.topic=log-tracing
# 1000000 - 100
observability.tracings.output.messageMaxBytes=999900
observability.tracings.output.reportThread=1
observability.tracings.output.queuedMaxSpans=1000
observability.tracings.output.queuedMaxSize=1000000
observability.tracings.output.messageTimeout=1000

plugin.observability.global.init.enabled=true
plugin.observability.global.tracing.enabled=true
plugin.observability.global.metric.enabled=true
plugin.observability.global.metric.interval=30
plugin.observability.global.metric.topic=application-meter
plugin.observability.global.metric.appendType=console
# add service name to header enabled by name for easemesh
plugin.integrability.global.addServiceNameHead.enabled=true
# redirect the middleware address when env has address, see: com.megaease.easeagent.plugin.api.middleware.MiddlewareConfigProcessor
plugin.integrability.global.redirect.enabled=true


plugin.observability.jdbcStatement.tracing.enabled=true
plugin.observability.jdbcStatement.metric.enabled=true
plugin.observability.jdbcStatement.metric.interval=30
plugin.observability.jdbcStatement.metric.topic=application-meter
plugin.observability.jdbcStatement.metric.appendType=console

plugin.observability.elasticsearch.tracing.enabled=true
plugin.observability.elasticsearch.metric.enabled=true
plugin.observability.elasticsearch.metric.interval=30
plugin.observability.elasticsearch.metric.topic=application-meter
plugin.observability.elasticsearch.metric.appendType=console


plugin.observability.mongodb.tracing.enabled=true
plugin.observability.mongodb.metric.enabled=false
plugin.observability.mongodb.metric.interval=30
plugin.observability.mongodb.metric.topic=application-meter
plugin.observability.mongodb.metric.appendType=console


# kafka
#plugin.observability.kafka.tracing.enabled=true
#plugin.observability.kafka.metric.enabled=true
#plugin.observability.kafka.metric.interval=30
#plugin.observability.kafka.metric.topic=application-meter
#plugin.observability.kafka.metric.appendType=console
#plugin.integrability.kafka.redirect.enabled=true

# httpservlet
#plugin.observability.httpservlet.metric.enabled=true
#plugin.observability.httpservlet.metric.interval=30
#plugin.observability.httpservlet.metric.topic=application-meter
#plugin.observability.httpservlet.metric.appendType=console

# redis
#plugin.observability.redis.tracing.enabled=true
#plugin.observability.redis.metric.enabled=true
#plugin.observability.redis.metric.interval=30
#plugin.observability.redis.metric.topic=application-meter
#plugin.observability.redis.metric.appendType=console

# httpclient and httpclient5
#plugin.observability.httpclient.tracing.enabled=true

# okhttp
#plugin.observability.okhttp.tracing.enabled=true

# access: servlet and ...
plugin.observability.access.metric.enabled=true
plugin.observability.access.metric.interval=30
plugin.observability.access.metric.topic=application-log
plugin.observability.access.metric.appendType=console


# add service name to header by name for easemesh. default name: X-Mesh-RPC-Service
plugin.integrability.servicename.addServiceNameHead.propagate.head=X-Mesh-RPC-Service

