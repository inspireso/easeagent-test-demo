name=demo-service
system=demo-system

### http server
# When the enabled value = false, agent will not start the http server
# You can use -Deaseagent.server.enabled=[true | false] to override.
easeagent.server.enabled=true
# http server port. You can use -Deaseagent.server.port=[port] to override.
easeagent.server.port=9900
# Enable health/readiness
easeagent.health.readiness.enabled=true

# forwarded headers page
# Pass-through headers from the root process all the way to the end
# format: easeagent.progress.forwarded.headers.{key}={headerName}
#easeagent.progress.forwarded.headers.x.for=X-Forwarded-For
# X-Mesh-Canary for mesh-app-backend
#easeagent.progress.forwarded.headers.canary.0=X-Mesh-Canary

# get header from response headers then tag to tracing span
# format: observability.tracings.tag.response.headers.{key}={value}
# support ease mesh
# X-EG-Circuit-Breaker
# X-EG-Retryer
# X-EG-Rate-Limiter
# X-EG-Time-Limiter
observability.tracings.tag.response.headers.eg.0=X-EG-Circuit-Breaker
observability.tracings.tag.response.headers.eg.1=X-EG-Retryer
observability.tracings.tag.response.headers.eg.2=X-EG-Rate-Limiter
observability.tracings.tag.response.headers.eg.3=X-EG-Time-Limiter

###
### Global tracings and metric configuration
###
plugin.observability.global.tracing.enabled=true

plugin.observability.global.metric.enabled=true
plugin.observability.global.metric.interval=30
plugin.observability.global.metric.topic=application-meter
plugin.observability.global.metric.appendType=console

# add service name to header enabled by name for easemesh
plugin.integrability.global.addServiceNameHead.enabled=true
# redirect the middleware address when env has address, see: com.megaease.easeagent.plugin.api.middleware.RedirectProcessor
# about redirect: jdbc, kafka, rabbitmq, redis,
plugin.integrability.global.redirect.enabled=true

# forwarded headers enabled.
# headers see config: easeagent.progress.forwarded.headers.???=???
plugin.integrability.global.forwarded.enabled=true
plugin.hook.global.foundation.enabled=true


###
### jvm  
###
plugin.observability.jvmGc.metric.topic=platform-meter
plugin.observability.jvmMemory.metric.topic=platform-meter

###
### access-log  
###
plugin.observability.access.metric.topic=application-log

###
### report configuration  
###
reporter.outputServer.bootstrapServer=http://tempo:9411
reporter.outputServer.enabled=true
reporter.outputServer.timeout=30000

reporter.tracing.async.messageMaxBytes=999900
reporter.tracing.async.reportThread=1
reporter.tracing.async.queuedMaxSpans=1000
reporter.tracing.async.queuedMaxSize=1000000
reporter.tracing.async.messageTimeout=1000

###
### tracing sender
###
reporter.tracing.sender.appendType=http
# reporter.tracing.sender.url=http://tempo:9411/api/v2/spans
reporter.tracing.sender.url=http://localhost:9411/api/v2/spans


###
### metric sender
###
# console
# reporter.metric.sender.appendType=console
# http
# reporter.metric.sender.appendType=http
# reporter.metric.sender.url=/metrics

